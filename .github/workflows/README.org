We need a [[https://cloud.google.com/iam/docs/creating-managing-service-accounts][service account]], used by CI to do the deployment:

#+begin_src sh
gcloud iam service-accounts create fritz-ci \
    --description "Fritz CI" \
    --display-name "fritz-ci"
#+end_src

Then [[https://cloud.google.com/iam/docs/granting-roles-to-service-accounts#granting_access_to_a_service_account_for_a_resource][add roles]]:

- Kubernetes Engine Developer - allows deploying to GKE
- Storage Admin - allows publishing to Container Registry

#+begin_src sh
gcloud projects add-iam-policy-binding skyportal-206621 \
  --member serviceAccount:fritz-ci@skyportal-206621.iam.gserviceaccount.com \
  --role "roles/container.developer"

gcloud projects add-iam-policy-binding skyportal-206621 \
  --member serviceAccount:fritz-ci@skyportal-206621.iam.gserviceaccount.com \
  --role "roles/storage.admin"

gcloud projects add-iam-policy-binding skyportal-206621 \
  --member serviceAccount:fritz-ci@skyportal-206621.iam.gserviceaccount.com \
  --role "roles/cloudkms.cryptoKeyDecrypter"
#+end_src

([[https://cloud.google.com/kms/docs/reference/permissions-and-roles][List of Key Management Service (KMS) roles]].)

Then create [[https://cloud.google.com/iam/docs/creating-managing-service-account-keys][service account key]]:

#+begin_src sh
gcloud iam service-accounts keys create ci-service-key.json \
  --iam-account fritz-ci@skyportal-206621.iam.gserviceaccount.com
#+end_src

The generated key gets added as the =GKE_SA_KEY= secret variable on GitHub.

Add the following secret variables on GitHub:

    - =GKE_PROJECT=: Google Cloud project ID
    - =GKE_SA_EMAIL=: the email of the service account (find this in the JSON key)
    - =GKE_SA_KEY=: the content of the service account JSON file
