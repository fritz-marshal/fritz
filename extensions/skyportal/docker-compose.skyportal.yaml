version: "3.7"

networks:
  default:
    external: true
    name: fritz_net

services:
  web:
    image: skyportal/web
    expose:
      - "5000"
    volumes:
      # If running the built image, this is unnecessary, since the
      # docker.yaml is already copied in.  But if you are deploying
      # locally (and modifying docker.yaml) this may come in handy.
      #
      # Note that the fritz build command regenerates docker.yaml
      - ${PWD}/../../skyportal/docker.yaml:/skyportal/config.yaml
      - ${PWD}/../../skyportal/data/db_fritz.yaml:/skyportal/data/db_seed.yaml
      - thumbnails:/skyportal/static/thumbnails
    labels:
#      # Explicitly tell Traefik to expose this container
      - "traefik.enable=true"
      - "traefik.docker.network=default"
      - "traefik.http.routers.fritz.rule=Host(`<host>`)"
      - "traefik.http.routers.fritz.entrypoints=websecure"
      - "traefik.http.routers.fritz.tls.certresolver=myresolver"
      - "traefik.http.services.fritz.loadBalancer.server.port=5000"
#      # middleware redirect
      - "traefik.http.middlewares.https_redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https_redirect.redirectscheme.permanent=true"
#      # global redirect to https
      - "traefik.http.routers.http_catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http_catchall.entrypoints=web"
      - "traefik.http.routers.http_catchall.middlewares=https_redirect"
    restart: on-failure:3
    depends_on:
      - db

  db:
    image: postgres:12.2
    environment:
      POSTGRES_USER: skyportal
      POSTGRES_PASSWORD: password
      POSTGRES_DB: skyportal
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - dbdata:/var/lib/postgresql/data/pgdata
    restart: on-failure:3

volumes:
  dbdata:
  thumbnails:
